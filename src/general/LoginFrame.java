
package general;

public class LoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form StartFrame
     */
    boolean done;
    boolean busy;
    
    public LoginFrame() {
        
        initComponents();
        
        // custom initial values
        done = false;
        busy = false;
        Main.id = "admin";
        administratorRadioButton.doClick();
        warningLabel.setVisible(false); // inicijalno nema upozorenja
        successLabel.setVisible(false); // inicijalno nema poruke o uspjehu
        
        //databse connection
        //db = new Database("D:\\Users\\Mihael\\Desktop\\RAČUNARSTVO\\Java_progs\\SQLite\\sqlite-tools-win32-x86-3400100\\sqlite-tools-win32-x86-3400100\\Menza.db");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        administratorRadioButton = new javax.swing.JRadioButton();
        blagajnikRadioButton = new javax.swing.JRadioButton();
        passwordField = new javax.swing.JPasswordField();
        warningLabel = new javax.swing.JLabel();
        welcomeLabel = new javax.swing.JLabel();
        instructionsLabel = new javax.swing.JLabel();
        choiceLabel = new javax.swing.JLabel();
        successLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(administratorRadioButton);
        administratorRadioButton.setText("Administrator");
        administratorRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(blagajnikRadioButton);
        blagajnikRadioButton.setText("Blagajnik");
        blagajnikRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blagajnikRadioButtonActionPerformed(evt);
            }
        });

        warningLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        warningLabel.setForeground(new java.awt.Color(204, 0, 0));
        warningLabel.setText("warningLabel");

        welcomeLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        welcomeLabel.setText("Dobro došli!");

        instructionsLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        instructionsLabel.setText("Ispunite polja s korisničkim imenom i lozinkom.");

        choiceLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        choiceLabel.setText("Odaberite jeste li administrator ili blagajnik:");

        successLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        successLabel.setForeground(new java.awt.Color(34, 139, 34));
        successLabel.setText("Prijava uspješna!");

        usernameLabel.setText("Korisničko ime");

        passwordLabel.setText("Lozinka");

        loginButton.setText("Prijava");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomeLabel)
                .addGap(225, 225, 225))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(usernameLabel)
                                                .addComponent(passwordLabel))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(blagajnikRadioButton)
                                                .addComponent(administratorRadioButton)
                                                .addComponent(usernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                                .addComponent(passwordField)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(55, 55, 55)
                                            .addComponent(successLabel)))
                                    .addGap(75, 75, 75))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(loginButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(choiceLabel)
                                            .addGap(16, 16, 16)))))
                            .addComponent(instructionsLabel))
                        .addGap(122, 122, 122))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomeLabel)
                .addGap(18, 18, 18)
                .addComponent(instructionsLabel)
                .addGap(18, 18, 18)
                .addComponent(warningLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addGap(25, 25, 25)
                .addComponent(choiceLabel)
                .addGap(18, 18, 18)
                .addComponent(administratorRadioButton)
                .addGap(13, 13, 13)
                .addComponent(blagajnikRadioButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(successLabel)
                    .addComponent(loginButton))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // prikazuje poruku o uspjesnoj prijavi
    void displaySuccess() {
        successLabel.setVisible(true);
    }
    
    // prikazuje upozorenje o pogresnoj prijavi s odgovarajucom porukom
    void displayWarning(String warningMessage,
            boolean resetUsernameTextField, boolean resetPasswordField) {
        if (resetUsernameTextField) usernameTextField.setText("");
        if (resetPasswordField) passwordField.setText("");
        warningLabel.setText(warningMessage);
        warningLabel.setVisible(true);
    }
    
    // prikazuje obavijest o neocekivanoj pogresci
    void displayError() {
        String warningMessage = "Dogodila se neočekivana "
                + "greška. Pokušajte ponovno.";
        displayWarning(warningMessage, 
                false,
                false);       
    }
    
    // provjerava je li korisnik doista unio korisnicko ime i lozinku
    boolean checkForEmptyCredentials(String inputUsername,
            String inputPassword) {
        if (inputUsername.isEmpty()) { // username nije uneseno
            String warningMessage = "Unesite svoje korisničko ime";
            
            if (!inputPassword.isEmpty()) warningMessage += "!";
            else warningMessage += " i lozinku!";
            
            warningLabel.setText(warningMessage);
            warningLabel.setVisible(true); // prikazujemo upozorenje
            
            return true; // omogucit cemo novi unos usernamea (i lozinke)
        }
        else { // korisnicko ime je uneseno
            if (inputPassword.isEmpty()) {
                warningLabel.setText("Unesite svoju lozinku!");
                warningLabel.setVisible(true); // prikazujemo upozorenje
                
                return true; // omogucit cemo novi unos lozinke
            }
            
            return false;
        }
    }
    
    private void administratorRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorRadioButtonActionPerformed
        // TODO add your handling code here:
        
        if(busy) {
            //reset code here
        }//ako postoji proces u pozadini ne radi nista
        Main.id = "admin";
        
    }//GEN-LAST:event_administratorRadioButtonActionPerformed

    private void blagajnikRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blagajnikRadioButtonActionPerformed
        // TODO add your handling code here:
        if(busy) {
            //reset code here
        }//ako postoji proces u pozadini ne radi nista
        Main.id = "worker";
    }//GEN-LAST:event_blagajnikRadioButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        String inputUsername = String.valueOf(usernameTextField.getText());
        String inputPassword = String.valueOf(passwordField.getPassword());
        
        // ako nedostaje neki od podataka (username ili pw), ponovi postupak
        if (checkForEmptyCredentials(inputUsername, inputPassword)) return;
        
        char role = 0;
        switch (Main.id) {
            case "admin" -> role = 'a';
            case "worker" -> role = 'b';
            default -> displayError();
        }
        UserVerification userVerification = new UserVerification(this,
                inputUsername, inputPassword, role);
        // izvrsavamo verifikaciju korisnika
        System.out.println("Verifying " + Main.id + " \"" + inputUsername 
                + "\"...");
        userVerification.execute();        
    }//GEN-LAST:event_loginButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton administratorRadioButton;
    private javax.swing.JRadioButton blagajnikRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel choiceLabel;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel successLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel warningLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
